{"version":3,"sources":["components/telBook/telBook.module.css","components/telBook/telInput/contactList.module.css","components/telBook/telInput/contactListFind.module.css","components/basicTextFields/BasicTextFields.js","redux/telBookReducers.js","firebase/config.js","components/login/Login.js","components/register/Register.js","redux/telBookOperations.js","components/telBook/telBookSelectors.js","components/telBook/telInput/ContactList.js","redux/store.js","components/telBook/telInput/FindInput.js","components/telBook/telInput/contactForm/TelInput.js","components/telBook/telInput/contactForm/ContactForm.js","components/telBook/TelBook.js","components/App.js","router.js","index.js"],"names":["module","exports","BasicTextFields","handleChange","label","name","value","type","TextField","id","variant","onChange","target","initialState","contacts","items","filter","user","email","nickname","uid","telBookReducers","createSlice","reducers","getContacts","state","payload","addContacts","deleteContacts","el","filterContacts","addRequest","loading","addSuccess","error","addError","getUsers","logOut","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStyles","makeStyles","theme","root","margin","spacing","width","display","Login","actions","useState","setEmail","password","setPassword","store","useStore","dispatch","useDispatch","classes","history","useHistory","evt","a","preventDefault","signInWithEmailAndPassword","auth","catch","message","className","styles","title","onSubmit","getState","Button","color","buttonDiv","onClick","push","pathname","button","Register","setNickname","createUserWithEmailAndPassword","errorMessage","console","log","currentUser","updateProfile","displayName","firestore","collection","doc","set","then","delete","getUserUid","getFilteredContcats","createSelector","toLowerCase","includes","connect","TransitionGroup","component","map","CSSTransition","classNames","key","timeout","listItems","text","number","telBookOperations","reducer","configureStore","unmountOnExit","in","length","TelInput","prop","style","allertShow","setAllertShow","setName","setNumber","alert","noValidate","autoComplete","find","setTimeout","UserNickname","contactsShot","onSnapshot","data","docs","elem","useEffect","SignOut","signOut","appear","event","App","setUser","onAuthStateChanged","routing","exact","path","TelBook","to","body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfdc343e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"telBook_enter__8oky1\",\"enterActive\":\"telBook_enterActive__FTu4A\",\"exit\":\"telBook_exit__24L1H\",\"exitActive\":\"telBook_exitActive__2E52j\",\"appear\":\"telBook_appear__1FLHw\",\"appearActive\":\"telBook_appearActive__1NBCh\",\"alert\":\"telBook_alert__1lbGM\",\"error\":\"telBook_error__3kZNg\",\"body\":\"telBook_body__2imDS\",\"title\":\"telBook_title__1q-fr\",\"buttonDiv\":\"telBook_buttonDiv__3kMUI\",\"button\":\"telBook_button__1qLe9\",\"form\":\"telBook_form__2yFQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__3SYjc\",\"enterActive\":\"contactList_enterActive__1ULWM\",\"exit\":\"contactList_exit__1EvFP\",\"exitActive\":\"contactList_exitActive__qFTpY\",\"listItems\":\"contactList_listItems__1y7RL\",\"text\":\"contactList_text__1DFPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactListFind_enter__1bd2R\",\"enterActive\":\"contactListFind_enterActive__ylZko\",\"exit\":\"contactListFind_exit__3WhgT\",\"exitActive\":\"contactListFind_exitActive__PHBrA\"};","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function BasicTextFields({\r\n  handleChange,\r\n  label,\r\n  name,\r\n  value,\r\n  type,\r\n}) {\r\n  return (\r\n    <TextField\r\n      type={type}\r\n      value={value}\r\n      name={name}\r\n      id=\"outlined-basic\"\r\n      label={label}\r\n      variant=\"outlined\"\r\n      onChange={({ target: { value } }) => handleChange(value)}\r\n    />\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n  user: {\r\n    email: \"\",\r\n    nickname: \"\",\r\n    uid: \"\",\r\n  },\r\n};\r\n\r\nexport const telBookReducers = createSlice({\r\n  name: \"@contacts\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    getContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: payload,\r\n      },\r\n    }),\r\n    addContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: [...state.contacts.items, payload],\r\n      },\r\n    }),\r\n    deleteContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: state.contacts.items.filter((el) => el.id !== payload),\r\n      },\r\n    }),\r\n    filterContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        filter: payload,\r\n      },\r\n    }),\r\n    addRequest: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    addSuccess: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    addError: (state, { type, payload }) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: payload,\r\n    }),\r\n    getUsers: (state, { type, payload }) => ({\r\n      ...state,\r\n      user: {\r\n        ...payload,\r\n      },\r\n    }),\r\n    logOut: (state, { type, payload }) => ({\r\n      ...initialState,\r\n    }),\r\n  },\r\n});\r\n","import firebase from \"firebase\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyCdD3x3iRHl4gyWIEae1bcODulmV-CURoU\",\r\n  authDomain: \"reacthw7.firebaseapp.com\",\r\n  databaseURL: \"https://reacthw7.firebaseio.com\",\r\n  projectId: \"reacthw7\",\r\n  storageBucket: \"reacthw7.appspot.com\",\r\n  messagingSenderId: \"8842518955\",\r\n  appId: \"1:8842518955:web:0c55ad8a595d94d88b72ee\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BasicTextFields from \"../basicTextFields/BasicTextFields\";\r\nimport styles from \"../telBook/telBook.module.css\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\nimport firebase from \"../../firebase/config\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Login() {\r\n  const {\r\n    actions: { addError, addRequest },\r\n  } = telBookReducers;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const user = { email, password };\r\n    await signInWithEmailAndPassword(user);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n  async function signInWithEmailAndPassword({ email, password }) {\r\n    dispatch(addRequest());\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => {\r\n        dispatch(addError(error.message));\r\n        const errorMessage = error.message;\r\n        return errorMessage;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>Login</h2>\r\n      <form onSubmit={handleSubmit} className={classes.root}>\r\n        <BasicTextFields\r\n          type={\"email\"}\r\n          value={email}\r\n          name={\"Email\"}\r\n          label={\"Email\"}\r\n          handleChange={setEmail}\r\n        />\r\n        <BasicTextFields\r\n          type={\"password\"}\r\n          value={password}\r\n          name={\"Password\"}\r\n          label={\"Password\"}\r\n          handleChange={setPassword}\r\n        />\r\n        {store.getState().error && (\r\n          <p className={styles.error}>{store.getState().error}</p>\r\n        )}\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Log in\r\n        </Button>\r\n      </form>\r\n      <h2 className={styles.title}>Dont have account? You can create it</h2>\r\n      <div className={styles.buttonDiv}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            history.push({\r\n              pathname: \"/register\",\r\n            })\r\n          }\r\n          className={styles.button}\r\n        >\r\n          Register\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BasicTextFields from \"../basicTextFields/BasicTextFields\";\r\nimport styles from \"../telBook/telBook.module.css\";\r\nimport firebase from \"../../firebase/config\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nexport function Register() {\r\n  const {\r\n    actions: { addError },\r\n  } = telBookReducers;\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const user = { nickname, email, password };\r\n    await createUserWithEmailAndPassword(user);\r\n    setNickname(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n  async function createUserWithEmailAndPassword({ email, password, nickname }) {\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((error) => {\r\n        dispatch(addError(error.message));\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage);\r\n        return errorMessage;\r\n      });\r\n    const user = await firebase.auth().currentUser;\r\n    user &&\r\n      user.updateProfile({\r\n        displayName: nickname,\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>Register form</h2>\r\n      <form onSubmit={handleSubmit} className={classes.root}>\r\n        <BasicTextFields\r\n          type={\"text\"}\r\n          value={nickname}\r\n          name={\"Nickname\"}\r\n          label={\"Nickname\"}\r\n          handleChange={setNickname}\r\n        />\r\n        <BasicTextFields\r\n          type={\"email\"}\r\n          value={email}\r\n          name={\"Email\"}\r\n          label={\"Email\"}\r\n          handleChange={setEmail}\r\n        />\r\n        <BasicTextFields\r\n          type={\"password\"}\r\n          value={password}\r\n          name={\"Password\"}\r\n          label={\"Password\"}\r\n          handleChange={setPassword}\r\n        />\r\n        {store.getState().error && (\r\n          <p className={styles.error}>{store.getState().error}</p>\r\n        )}\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { telBookReducers } from \"./telBookReducers\";\r\nimport firebase from \"../firebase/config\";\r\n\r\nconst addContact = (items) => (dispatch) => {\r\n  const {\r\n    actions: { addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n  dispatch(addRequest());\r\n  const user = firebase.auth().currentUser;\r\n  firebase\r\n    .firestore()\r\n    .collection(user.uid)\r\n    .doc()\r\n    .set(items)\r\n    .then(() => {\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nconst getContacts = (data) => async (dispatch) => {\r\n  const {\r\n    actions: { getContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n\r\n  dispatch(addRequest());\r\n  try {\r\n    dispatch(getContacts(data));\r\n    dispatch(addSuccess());\r\n  } catch (error) {\r\n    dispatch(addError());\r\n  }\r\n\r\n  console.log(\"user2\", data);\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  const {\r\n    actions: { deleteContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n  dispatch(addRequest());\r\n  const user = firebase.auth().currentUser;\r\n  firebase\r\n    .firestore()\r\n    .collection(user.uid)\r\n    .doc(id)\r\n    .delete()\r\n    .then(() => {\r\n      dispatch(deleteContacts(id));\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nexport default { addContact, getContacts, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getUserUid = (state) => state.user.uid;\r\nexport const getUserNickname = (state) => state.user.nickname;\r\n\r\nexport const getFilteredContcats = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return filter\r\n      ? contacts.filter((el) =>\r\n          el.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n      : contacts;\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport styles from \"./contactList.module.css\";\r\nimport telBookOperations from \"../../../redux/telBookOperations\";\r\nimport { getFilteredContcats } from \"../telBookSelectors\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((el) => (\r\n          <CSSTransition classNames={styles} key={el.id} timeout={250}>\r\n            <li key={el.id} className={styles.listItems}>\r\n              <p className={styles.text}>{el.name}</p>\r\n              <p className={styles.text}>{el.number}</p>\r\n\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => dispatch(telBookOperations.deleteContact(el.id))}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getFilteredContcats(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { telBookReducers } from \"./telBookReducers\";\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst { reducer } = telBookReducers;\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./contactListFind.module.css\";\r\nimport store from \"../../../redux/store\";\r\nimport { getContacts } from \"../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nfunction FindInput({ onChange }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        classNames={styles}\r\n        timeout={500}\r\n        unmountOnExit\r\n        in={store.getState().contacts.items.length > 1}\r\n      >\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"outlined-basic\"\r\n          label=\"Find contacts by name\"\r\n          variant=\"outlined\"\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n        />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FindInput);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function TelInput(prop) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className={classes.root}\r\n        style={{ width: 200, margin: 10 }}\r\n        id=\"outlined-basic\"\r\n        label={prop.name}\r\n        variant=\"outlined\"\r\n        name={prop.name}\r\n        onChange={prop.onChange}\r\n        value={prop.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { TelInput } from \"./TelInput\";\r\nimport styles from \"../../telBook.module.css\";\r\nimport telBookOperations from \"../../../../redux/telBookOperations\";\r\nimport { getContacts } from \"../../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContactForm({ contacts }) {\r\n  const [allertShow, setAllertShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange({ target }) {\r\n    const { name, value } = target;\r\n\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const lookingFor = contacts.find((el) => el.name === name);\r\n    if (lookingFor) {\r\n      setAllertShow(true);\r\n      setTimeout(() => {\r\n        setAllertShow(false);\r\n      }, 3000);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      dispatch(\r\n        telBookOperations.addContact({\r\n          name: name,\r\n          number: number,\r\n        })\r\n      );\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={5000} classNames={styles} in={allertShow}>\r\n        <div className={styles.alert}>\r\n          <p>This contact already in phonebook</p>\r\n        </div>\r\n      </CSSTransition>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        className={classes.root}\r\n      >\r\n        <TelInput name={\"name\"} onChange={handleChange} value={name} />\r\n        <TelInput name={\"number\"} onChange={handleChange} value={number} />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import React, { useEffect } from \"react\";\r\nimport ContactList from \"./telInput/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch, connect, useStore } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FindInput from \"./telInput/FindInput\";\r\nimport styles from \"./telBook.module.css\";\r\nimport ContactForm from \"./telInput/contactForm/ContactForm\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\nimport firebase from \"../../firebase/config\";\r\nimport { getUserUid } from \"./telBookSelectors\";\r\n\r\nfunction TelBook({ uid }) {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { filterContacts, getContacts, logOut },\r\n  } = telBookReducers;\r\n  const UserNickname = store.getState().user.nickname;\r\n\r\n  const contactsShot = async () => {\r\n    await firebase\r\n      .firestore()\r\n      .collection(uid)\r\n      .onSnapshot((doc) => {\r\n        const data = doc.docs.map((elem) => ({\r\n          ...elem.data(),\r\n          id: elem.id,\r\n        }));\r\n        dispatch(getContacts(data));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    contactsShot();\r\n  }, []);\r\n\r\n  const SignOut = async () => {\r\n    firebase.auth().signOut();\r\n    dispatch(logOut());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={500} classNames={styles} appear unmountOnExit in>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={SignOut}>\r\n            LogOut\r\n          </Button>\r\n          <h2 className={styles.title}>hello, {UserNickname} </h2>\r\n\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <FindInput\r\n        onChange={(event) => dispatch(filterContacts(event.target.value))}\r\n      />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uid: getUserUid(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TelBook);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"../router\";\r\nimport styles from \"./telBook/telBook.module.css\";\r\nimport firebase from \"../firebase/config\";\r\nimport { telBookReducers } from \"../redux/telBookReducers\";\r\n\r\nfunction App() {\r\n  const {\r\n    actions: { getUsers },\r\n  } = telBookReducers;\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState(null);\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    setUser(user);\r\n  });\r\n  if (user) {\r\n    dispatch(\r\n      getUsers({ email: user.email, uid: user.uid, nickname: user.displayName })\r\n    );\r\n  }\r\n  const routing = useRouter(user);\r\n  return (\r\n    <>\r\n      <div className={styles.body}>{routing}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./components/login/Login\";\r\nimport { Register } from \"./components/register/Register\";\r\nimport TelBook from \"./components/telBook/TelBook\";\r\n\r\nexport const useRouter = (auth) => {\r\n  if (auth) {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/contacts\" component={TelBook} />\r\n        <Redirect to=\"/contacts\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}