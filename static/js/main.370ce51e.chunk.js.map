{"version":3,"sources":["components/telBook/telBook.module.css","components/telBook/telInput/contactList.module.css","components/telBook/telInput/contactListFind.module.css","components/basicTextFields/BasicTextFields.js","firebase/config.js","firebase/firebaseFunctions.js","redux/telBookReducers.js","components/login/Login.js","components/register/Register.js","redux/telBookOperations.js","components/telBook/telBookSelectors.js","components/telBook/telInput/ContactList.js","redux/store.js","components/telBook/telInput/FindInput.js","components/telBook/telInput/contactForm/TelInput.js","components/telBook/telInput/contactForm/ContactForm.js","components/telBook/TelBook.js","components/App.js","router.js","index.js"],"names":["module","exports","BasicTextFields","handleChange","label","name","value","type","TextField","id","variant","onChange","target","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","signInWithEmailAndPassword","a","email","password","auth","catch","error","console","log","message","createUserWithEmailAndPassword","nickname","currentUser","updateProfile","displayName","initialState","contacts","items","filter","user","uid","telBookReducers","createSlice","reducers","getContacts","state","payload","addContacts","deleteContacts","el","filterContacts","addRequest","loading","addSuccess","addError","getUsers","logOut","useStyles","makeStyles","theme","root","margin","spacing","width","display","Login","actions","useState","setEmail","setPassword","dispatch","useDispatch","classes","history","useHistory","className","styles","title","onSubmit","evt","preventDefault","Button","color","buttonDiv","onClick","push","pathname","button","Register","setNickname","firestore","collection","doc","set","then","delete","getUserUid","getFilteredContcats","createSelector","toLowerCase","includes","connect","TransitionGroup","component","map","CSSTransition","classNames","key","timeout","listItems","text","number","telBookOperations","reducer","store","configureStore","unmountOnExit","in","getState","length","TelInput","prop","style","allertShow","setAllertShow","setName","setNumber","alert","noValidate","autoComplete","find","setTimeout","useStore","UserNickname","contactsShot","onSnapshot","data","docs","elem","useEffect","SignOut","signOut","appear","event","App","setUser","onAuthStateChanged","routing","exact","path","TelBook","to","body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.370ce51e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"telBook_enter__8oky1\",\"enterActive\":\"telBook_enterActive__FTu4A\",\"exit\":\"telBook_exit__24L1H\",\"exitActive\":\"telBook_exitActive__2E52j\",\"appear\":\"telBook_appear__1FLHw\",\"appearActive\":\"telBook_appearActive__1NBCh\",\"alert\":\"telBook_alert__1lbGM\",\"body\":\"telBook_body__2imDS\",\"title\":\"telBook_title__1q-fr\",\"buttonDiv\":\"telBook_buttonDiv__3kMUI\",\"button\":\"telBook_button__1qLe9\",\"form\":\"telBook_form__2yFQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__3SYjc\",\"enterActive\":\"contactList_enterActive__1ULWM\",\"exit\":\"contactList_exit__1EvFP\",\"exitActive\":\"contactList_exitActive__qFTpY\",\"listItems\":\"contactList_listItems__1y7RL\",\"text\":\"contactList_text__1DFPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactListFind_enter__1bd2R\",\"enterActive\":\"contactListFind_enterActive__ylZko\",\"exit\":\"contactListFind_exit__3WhgT\",\"exitActive\":\"contactListFind_exitActive__PHBrA\"};","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function BasicTextFields({\r\n  handleChange,\r\n  label,\r\n  name,\r\n  value,\r\n  type,\r\n}) {\r\n  return (\r\n    <TextField\r\n      type={type}\r\n      value={value}\r\n      name={name}\r\n      id=\"outlined-basic\"\r\n      label={label}\r\n      variant=\"outlined\"\r\n      onChange={({ target: { value } }) => handleChange(value)}\r\n    />\r\n  );\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyCdD3x3iRHl4gyWIEae1bcODulmV-CURoU\",\r\n  authDomain: \"reacthw7.firebaseapp.com\",\r\n  databaseURL: \"https://reacthw7.firebaseio.com\",\r\n  projectId: \"reacthw7\",\r\n  storageBucket: \"reacthw7.appspot.com\",\r\n  messagingSenderId: \"8842518955\",\r\n  appId: \"1:8842518955:web:0c55ad8a595d94d88b72ee\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import firebase from \"./config\";\r\n\r\nexport const signInWithEmailAndPassword = async ({ email, password }) => {\r\n  await firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .catch((error) => {\r\n      console.log(error.message);\r\n      const errorMessage = error.message;\r\n      return errorMessage;\r\n    });\r\n};\r\n\r\nexport const createUserWithEmailAndPassword = async ({\r\n  email,\r\n  password,\r\n  nickname,\r\n}) => {\r\n  await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n  const user = await firebase.auth().currentUser;\r\n  user.updateProfile({\r\n    displayName: nickname,\r\n  });\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n  user: {\r\n    email: \"\",\r\n    nickname: \"\",\r\n    uid: \"\",\r\n  },\r\n};\r\n\r\nexport const telBookReducers = createSlice({\r\n  name: \"@contacts\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    getContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: payload,\r\n      },\r\n    }),\r\n    addContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: [...state.contacts.items, payload],\r\n      },\r\n    }),\r\n    deleteContacts: (state, { type, payload }) => ({\r\n      ...state,\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: state.contacts.items.filter((el) => el.id !== payload),\r\n      },\r\n    }),\r\n    filterContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        filter: payload,\r\n      },\r\n    }),\r\n    addRequest: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n    addSuccess: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n    addError: (state) => ({\r\n      ...state,\r\n      loading: false,\r\n    }),\r\n    getUsers: (state, { type, payload }) => ({\r\n      ...state,\r\n      user: {\r\n        ...payload,\r\n      },\r\n    }),\r\n    logOut: (state, { type, payload }) => ({\r\n      ...initialState,\r\n    }),\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BasicTextFields from \"../basicTextFields/BasicTextFields\";\r\nimport styles from \"../telBook/telBook.module.css\";\r\nimport { signInWithEmailAndPassword } from \"../../firebase/firebaseFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Login = () => {\r\n  const {\r\n    actions: { getUsers },\r\n  } = telBookReducers;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const userInfo = { email, password };\r\n    const user = { email, password };\r\n    signInWithEmailAndPassword(userInfo);\r\n    dispatch(getUsers(user));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    // console.log(signInWithEmailAndPassword());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>Login form</h2>\r\n      <form onSubmit={handleSubmit} className={classes.root}>\r\n        <BasicTextFields\r\n          type={\"email\"}\r\n          value={email}\r\n          name={\"Email\"}\r\n          label={\"Email\"}\r\n          handleChange={setEmail}\r\n        />\r\n        <BasicTextFields\r\n          type={\"password\"}\r\n          value={password}\r\n          name={\"Password\"}\r\n          label={\"Password\"}\r\n          handleChange={setPassword}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Log in\r\n        </Button>\r\n      </form>\r\n      <h2 className={styles.title}>Dont have account? You can create it</h2>\r\n      <div className={styles.buttonDiv}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() =>\r\n            history.push({\r\n              pathname: \"/register\",\r\n            })\r\n          }\r\n          className={styles.button}\r\n        >\r\n          Register\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BasicTextFields from \"../basicTextFields/BasicTextFields\";\r\nimport styles from \"../telBook/telBook.module.css\";\r\nimport { createUserWithEmailAndPassword } from \"../../firebase/firebaseFunctions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nexport const Register = () => {\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const userInfo = { nickname, email, password };\r\n    createUserWithEmailAndPassword(userInfo);\r\n    setNickname(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>Register form</h2>\r\n      <form onSubmit={handleSubmit} className={classes.root}>\r\n        <BasicTextFields\r\n          type={\"text\"}\r\n          value={nickname}\r\n          name={\"Nickname\"}\r\n          label={\"Nickname\"}\r\n          handleChange={setNickname}\r\n        />\r\n        <BasicTextFields\r\n          type={\"email\"}\r\n          value={email}\r\n          name={\"Email\"}\r\n          label={\"Email\"}\r\n          handleChange={setEmail}\r\n        />\r\n        <BasicTextFields\r\n          type={\"password\"}\r\n          value={password}\r\n          name={\"Password\"}\r\n          label={\"Password\"}\r\n          handleChange={setPassword}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { telBookReducers } from \"./telBookReducers\";\r\nimport firebase from \"../firebase/config\";\r\n\r\nconst addContact = (items) => (dispatch) => {\r\n  const {\r\n    actions: { addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n  dispatch(addRequest());\r\n  const user = firebase.auth().currentUser;\r\n  firebase\r\n    .firestore()\r\n    .collection(user.uid)\r\n    .doc()\r\n    .set(items)\r\n    .then(() => {\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nconst getContacts = (data) => async (dispatch) => {\r\n  console.log(\"AAAAAAAAAA\");\r\n  const {\r\n    actions: { getContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n\r\n  dispatch(addRequest());\r\n  try {\r\n    dispatch(getContacts(data));\r\n    dispatch(addSuccess());\r\n  } catch (error) {\r\n    dispatch(addError());\r\n  }\r\n\r\n  console.log(\"user2\", data);\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  const {\r\n    actions: { deleteContacts, addRequest, addSuccess, addError },\r\n  } = telBookReducers;\r\n  dispatch(addRequest());\r\n  const user = firebase.auth().currentUser;\r\n  firebase\r\n    .firestore()\r\n    .collection(user.uid)\r\n    .doc(id)\r\n    .delete()\r\n    .then(() => {\r\n      dispatch(deleteContacts(id));\r\n      dispatch(addSuccess());\r\n    })\r\n    .catch((error) => dispatch(addError()));\r\n};\r\n\r\nexport default { addContact, getContacts, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getUserUid = (state) => state.user.uid;\r\nexport const getUserNickname = (state) => state.user.nickname;\r\n\r\nexport const getFilteredContcats = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return filter\r\n      ? contacts.filter((el) =>\r\n          el.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n      : contacts;\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport styles from \"./contactList.module.css\";\r\nimport telBookOperations from \"../../../redux/telBookOperations\";\r\nimport { getFilteredContcats } from \"../telBookSelectors\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((el) => (\r\n          <CSSTransition classNames={styles} key={el.id} timeout={250}>\r\n            <li key={el.id} className={styles.listItems}>\r\n              <p className={styles.text}>{el.name}</p>\r\n              <p className={styles.text}>{el.number}</p>\r\n\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => dispatch(telBookOperations.deleteContact(el.id))}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getFilteredContcats(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { telBookReducers } from \"./telBookReducers\";\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst { reducer } = telBookReducers;\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./contactListFind.module.css\";\r\nimport store from \"../../../redux/store\";\r\nimport { getContacts } from \"../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nfunction FindInput({ onChange }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        classNames={styles}\r\n        timeout={500}\r\n        unmountOnExit\r\n        in={store.getState().contacts.items.length > 1}\r\n      >\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"outlined-basic\"\r\n          label=\"Find contacts by name\"\r\n          variant=\"outlined\"\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n        />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FindInput);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function TelInput(prop) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className={classes.root}\r\n        style={{ width: 200, margin: 10 }}\r\n        id=\"outlined-basic\"\r\n        label={prop.name}\r\n        variant=\"outlined\"\r\n        name={prop.name}\r\n        onChange={prop.onChange}\r\n        value={prop.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { TelInput } from \"./TelInput\";\r\nimport styles from \"../../telBook.module.css\";\r\nimport telBookOperations from \"../../../../redux/telBookOperations\";\r\nimport { getContacts } from \"../../telBookSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContactForm({ contacts }) {\r\n  const [allertShow, setAllertShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange({ target }) {\r\n    const { name, value } = target;\r\n\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const lookingFor = contacts.find((el) => el.name === name);\r\n    if (lookingFor) {\r\n      setAllertShow(true);\r\n      setTimeout(() => {\r\n        setAllertShow(false);\r\n      }, 3000);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      dispatch(\r\n        telBookOperations.addContact({\r\n          name: name,\r\n          number: number,\r\n        })\r\n      );\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={5000} classNames={styles} in={allertShow}>\r\n        <div className={styles.alert}>\r\n          <p>This contact already in phonebook</p>\r\n        </div>\r\n      </CSSTransition>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        className={classes.root}\r\n      >\r\n        <TelInput name={\"name\"} onChange={handleChange} value={name} />\r\n        <TelInput name={\"number\"} onChange={handleChange} value={number} />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import React, { useEffect } from \"react\";\r\nimport ContactList from \"./telInput/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch, connect, useStore } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FindInput from \"./telInput/FindInput\";\r\nimport styles from \"./telBook.module.css\";\r\nimport ContactForm from \"./telInput/contactForm/ContactForm\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\nimport firebase from \"../../firebase/config\";\r\nimport { getUserUid } from \"./telBookSelectors\";\r\n\r\nfunction TelBook({ uid }) {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { filterContacts, getContacts, logOut },\r\n  } = telBookReducers;\r\n  const UserNickname = store.getState().user.nickname;\r\n  const contactsShot = async () => {\r\n    await firebase\r\n      .firestore()\r\n      .collection(uid)\r\n      .onSnapshot((doc) => {\r\n        const data = doc.docs.map((elem) => ({\r\n          ...elem.data(),\r\n          id: elem.id,\r\n        }));\r\n        dispatch(getContacts(data));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    contactsShot();\r\n  }, []);\r\n\r\n  const SignOut = async () => {\r\n    firebase.auth().signOut();\r\n    dispatch(logOut());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={500} classNames={styles} appear unmountOnExit in>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={SignOut}>\r\n            LogOut\r\n          </Button>\r\n          <h2 className={styles.title}>hello, {UserNickname} </h2>\r\n\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <FindInput\r\n        onChange={(event) => dispatch(filterContacts(event.target.value))}\r\n      />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uid: getUserUid(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TelBook);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRouter } from \"../router\";\r\nimport styles from \"./telBook/telBook.module.css\";\r\nimport firebase from \"../firebase/config\";\r\nimport { telBookReducers } from \"../redux/telBookReducers\";\r\n\r\nfunction App() {\r\n  const {\r\n    actions: { getUsers },\r\n  } = telBookReducers;\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState(null);\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    setUser(user);\r\n  });\r\n  if (user) {\r\n    dispatch(\r\n      getUsers({ email: user.email, uid: user.uid, nickname: user.displayName })\r\n    );\r\n  }\r\n  const routing = useRouter(user);\r\n  return (\r\n    <>\r\n      <div className={styles.body}>{routing}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./components/login/Login\";\r\nimport { Register } from \"./components/register/Register\";\r\nimport TelBook from \"./components/telBook/TelBook\";\r\n\r\nexport const useRouter = (auth) => {\r\n  if (auth) {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/contacts\" component={TelBook} />\r\n        <Redirect to=\"/contacts\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}